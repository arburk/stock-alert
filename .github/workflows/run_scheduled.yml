name: Execute

on:
  schedule:
    - cron: '16 7-19 * * *' # 7–19 UTC correlates to 9–21 Uhr GMT+2
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 2
    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@main
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Compile
        run: mvn -B -DskipTests=true clean package --file pom.xml

      - name: Execute
        run: |
          export build_version=$(mvn help:evaluate -Dexpression='project.version' -q -DforceStdout)
          nohup java -jar ${{ github.workspace }}/target/stock-alert-$build_version.jar  > ${{ github.workspace }}/target/stock-alert-execution.log 2>&1 &
          echo $! > app.pid
        env:
          CONFIG-URL: ${{ vars.CONFIG_URL }}
          FCS-API-KEY: ${{ secrets.FCS_API_KEY }}
          GATEWAY-EMAIL-HOST: ${{ vars.GATEWAY_EMAIL_HOST }}
          GATEWAY-EMAIL-PORT: ${{ vars.GATEWAY_EMAIL_PORT }}
          GATEWAY-EMAIL-PWD: ${{ secrets.GATEWAY_EMAIL_PWD }}
          GATEWAY-EMAIL-SENDER-ADDRESS: ${{ vars.GATEWAY_EMAIL_SENDER }}
          GATEWAY-EMAIL-USER: ${{ secrets.GATEWAY_EMAIL_USER }}
          S3-ACCESS-KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3-SECRET-KEY: ${{ secrets.S3_SECRET_KEY }}
          S3-ENDPOINT: ${{ vars.S3_ENDPOINT }}
          S3-REGION: ${{ vars.S3_REGION }}
          STORAGE: ${{ vars.STORAGE }}
          UPDATE-CRON: "-"
          UPDATE-ON-STARTUP: true
          SPRING_APPLICATION_JSON: ${{ vars.SPRING_APPLICATION_JSON}}

      - name: Wait for execution
        run: |
          end=$((SECONDS+60))
          tail -n0 -F ${{ github.workspace }}/target/stock-alert-execution.log &
          tail_pid=$!
          while [ $SECONDS -lt $end ]; do
            if grep -q "Stock update finished." ${{ github.workspace }}/target/stock-alert-execution.log; then
              echo "✅ Update finished."
              kill $tail_pid
              exit 0
            fi
            sleep 2
          done
          echo "⏱ Timeout reached"
          kill $tail_pid

      - name: Log result and shutdown
        run: |
          if [ -f app.pid ]; then
            kill $(cat app.pid)
            rm app.pid
          fi
